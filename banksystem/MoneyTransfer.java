/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banksystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.*;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class MoneyTransfer extends javax.swing.JFrame {

    /**
     * Creates new form MoneyTransfer
     */

    Connection conn1, conn2;
    PreparedStatement select, selectSaving, selectFixed, insert, updateSaving, updateFixed, selectStock, updateStock;

    String accountNumber;
    double currentAmount;
    String accountState;
    double moneyStock;

    String recipientName, recipientBank, recipientBranch;
    int recipientAccountNumber;
    double transferAmount;

    public MoneyTransfer() {
        initComponents();
        MoneyTransferUsername.setText(User.getUsername());
        MoneyTransferPassword.setText(User.getPassword());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        ExchangeMoneyCheckButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        MoneyTransferHomeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        MoneyTransferUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        MoneyTransferPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        MoneyTransferAccountType = new javax.swing.JComboBox<>();
        MoneyTransferCheckButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        MoneyTransferAccountNumber = new javax.swing.JTextField();
        MoneyTransferCurrentAmount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        MoneyTransferRecipientName = new javax.swing.JTextField();
        MoneyTransferRecipientBank = new javax.swing.JTextField();
        MoneyTransferRecipientBranch = new javax.swing.JTextField();
        MoneyTransferRecipientAccountNumber = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        MoneyTransferTranferAmount = new javax.swing.JTextField();
        MoneyTransferCancelButton = new javax.swing.JButton();
        MoneyTransferTranferButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        MoneyTransferGetStatementButton = new javax.swing.JButton();

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Account Type");

        ExchangeMoneyCheckButton.setBackground(new java.awt.Color(153, 255, 102));
        ExchangeMoneyCheckButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyCheckButton.setText("Check ");
        ExchangeMoneyCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyCheckButtonActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 102, 255)));

        MoneyTransferHomeButton.setBackground(new java.awt.Color(255, 255, 51));
        MoneyTransferHomeButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferHomeButton.setText("Home");
        MoneyTransferHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferHomeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("username");

        MoneyTransferUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferUsernameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Account Type");

        MoneyTransferAccountType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Saving Account", "Fixed Account" }));
        MoneyTransferAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferAccountTypeActionPerformed(evt);
            }
        });

        MoneyTransferCheckButton.setBackground(new java.awt.Color(153, 255, 102));
        MoneyTransferCheckButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferCheckButton.setText("Check ");
        MoneyTransferCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferCheckButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Account Number");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Current Amount");

        MoneyTransferAccountNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferAccountNumberActionPerformed(evt);
            }
        });

        MoneyTransferCurrentAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferCurrentAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferCurrentAmountActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Recipient");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Name");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Bank");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Branch");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Account Number");

        MoneyTransferRecipientName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferRecipientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferRecipientNameActionPerformed(evt);
            }
        });

        MoneyTransferRecipientBank.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferRecipientBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferRecipientBankActionPerformed(evt);
            }
        });

        MoneyTransferRecipientBranch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferRecipientBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferRecipientBranchActionPerformed(evt);
            }
        });

        MoneyTransferRecipientAccountNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferRecipientAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferRecipientAccountNumberActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Transfer Amount");

        MoneyTransferTranferAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferTranferAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferTranferAmountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MoneyTransferRecipientName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoneyTransferRecipientBank, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoneyTransferRecipientBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoneyTransferRecipientAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoneyTransferTranferAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(MoneyTransferRecipientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(MoneyTransferRecipientBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addComponent(MoneyTransferRecipientBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10))
                        .addGap(30, 30, 30)
                        .addComponent(MoneyTransferRecipientAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MoneyTransferTranferAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        MoneyTransferCancelButton.setBackground(new java.awt.Color(255, 0, 0));
        MoneyTransferCancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        MoneyTransferCancelButton.setText("Cancel");
        MoneyTransferCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferCancelButtonActionPerformed(evt);
            }
        });

        MoneyTransferTranferButton.setBackground(new java.awt.Color(0, 204, 51));
        MoneyTransferTranferButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferTranferButton.setForeground(new java.awt.Color(255, 255, 255));
        MoneyTransferTranferButton.setText("Transfer");
        MoneyTransferTranferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferTranferButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Money Transfer");

        MoneyTransferGetStatementButton.setBackground(new java.awt.Color(0, 0, 204));
        MoneyTransferGetStatementButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MoneyTransferGetStatementButton.setForeground(new java.awt.Color(255, 255, 255));
        MoneyTransferGetStatementButton.setText("Get Statement");
        MoneyTransferGetStatementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoneyTransferGetStatementButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(MoneyTransferHomeButton)
                        .addGap(130, 130, 130)
                        .addComponent(jLabel12)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(MoneyTransferAccountType, 0, 145, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MoneyTransferPassword)
                                            .addComponent(MoneyTransferUsername))))
                                .addGap(210, 210, 210))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(MoneyTransferCurrentAmount)
                                        .addGap(174, 174, 174))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(MoneyTransferAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(MoneyTransferCheckButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(MoneyTransferCancelButton)
                .addGap(184, 184, 184)
                .addComponent(MoneyTransferGetStatementButton)
                .addGap(178, 178, 178)
                .addComponent(MoneyTransferTranferButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(MoneyTransferUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(MoneyTransferHomeButton))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(MoneyTransferPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(MoneyTransferAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addComponent(MoneyTransferCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MoneyTransferAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MoneyTransferCurrentAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoneyTransferCancelButton)
                    .addComponent(MoneyTransferTranferButton)
                    .addComponent(MoneyTransferGetStatementButton))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MoneyTransferHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferHomeButtonActionPerformed
        new ClientSector().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MoneyTransferHomeButtonActionPerformed

    private void MoneyTransferUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferUsernameActionPerformed

    private void MoneyTransferAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferAccountTypeActionPerformed

    }//GEN-LAST:event_MoneyTransferAccountTypeActionPerformed

    private void ExchangeMoneyCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyCheckButtonActionPerformed

    }//GEN-LAST:event_ExchangeMoneyCheckButtonActionPerformed

    private void MoneyTransferCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferCheckButtonActionPerformed

        try{

            String username = MoneyTransferUsername.getText().trim();
            String password = String.valueOf(MoneyTransferPassword.getPassword()).trim();

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3307/bank_system","root","");

            select = conn1.prepareStatement("select * from clients");
            ResultSet rs = select.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            int c = rsmd.getColumnCount();

            DecimalFormat formatter = new DecimalFormat("###,###,###.##");
            
            while(rs.next()){
                for(int a=1; a<=c; a++){
                    if(rs.getString("username").equals(username) && rs.getString("password").equals(password)){

                        accountNumber = rs.getInt("accountnumber")+"";
                        System.out.println("Account Number : "+accountNumber);

                        MoneyTransferAccountNumber.setText(accountNumber);

                    }
                }
            }

            if(MoneyTransferAccountType.getSelectedIndex()==0){
                selectSaving = conn1.prepareStatement("select * from saving_accounts");
                ResultSet rs2 = selectSaving.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            currentAmount = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");

                            MoneyTransferCurrentAmount.setText(formatter.format(currentAmount));
                            
                        }
                    }
                }
            }

            if(MoneyTransferAccountType.getSelectedIndex()==1){
                selectFixed = conn1.prepareStatement("select * from fixed_deposits");
                ResultSet rs2 = selectFixed.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                
                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            currentAmount = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");

                            MoneyTransferCurrentAmount.setText(formatter.format(currentAmount));
                            
                        }
                    }
                }
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
        catch(Exception f){
            JOptionPane.showMessageDialog(null, f);
            System.out.println(f);
        }
    }//GEN-LAST:event_MoneyTransferCheckButtonActionPerformed

    private void MoneyTransferAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferAccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferAccountNumberActionPerformed

    private void MoneyTransferCurrentAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferCurrentAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferCurrentAmountActionPerformed

    private void MoneyTransferRecipientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferRecipientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferRecipientNameActionPerformed

    private void MoneyTransferRecipientBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferRecipientBankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferRecipientBankActionPerformed

    private void MoneyTransferRecipientBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferRecipientBranchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferRecipientBranchActionPerformed

    private void MoneyTransferRecipientAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferRecipientAccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferRecipientAccountNumberActionPerformed

    private void MoneyTransferCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferCancelButtonActionPerformed
        MoneyTransferUsername.setText("");
        MoneyTransferPassword.setText("");
        MoneyTransferAccountNumber.setText("");
        MoneyTransferCurrentAmount.setText("");
        MoneyTransferRecipientName.setText("");
        MoneyTransferRecipientBank.setText("");
        MoneyTransferRecipientBranch.setText("");
        MoneyTransferRecipientAccountNumber.setText("");
        MoneyTransferTranferAmount.setText("");
    }//GEN-LAST:event_MoneyTransferCancelButtonActionPerformed

    private void MoneyTransferTranferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferTranferButtonActionPerformed

        recipientName = MoneyTransferRecipientName.getText().trim();
        recipientBank = MoneyTransferRecipientBank.getText().trim();
        recipientBranch = MoneyTransferRecipientBranch.getText().trim();
        recipientAccountNumber = Integer.valueOf(MoneyTransferRecipientAccountNumber.getText().trim());
        transferAmount = Double.valueOf(MoneyTransferTranferAmount.getText().trim());

        try{

            if(currentAmount < transferAmount){
                JOptionPane.showMessageDialog(null, "You can't transfer such a big amount of money.");
            }

            else{

                Class.forName("com.mysql.cj.jdbc.Driver");
                conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3307/bank_system","root","");

                if(MoneyTransferAccountType.getSelectedIndex()==0){           

                    updateSaving = conn2.prepareStatement("update saving_accounts set money_amount = ? where account_number = ?");
                    updateSaving.setDouble(1,currentAmount - transferAmount);
                    updateSaving.setString(2,accountNumber);
                    updateSaving.executeUpdate();

                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs3 = selectStock.executeQuery();
                    ResultSetMetaData rsmd3 = rs3.getMetaData();
                    int c3 = rsmd3.getColumnCount();

                    while(rs3.next()){
                        for(int b=1; b<=c3; b++){
                            moneyStock = rs3.getDouble("money_stock");
                        }
                    }

                    moneyStock -= transferAmount;

                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, moneyStock);
                    updateStock.executeUpdate();

                }

                if(MoneyTransferAccountType.getSelectedIndex()==1){           

                    updateSaving = conn2.prepareStatement("update fixed_deposits set money_amount = ? where account_number = ?");
                    updateSaving.setDouble(1,currentAmount - transferAmount);
                    updateSaving.setString(2,accountNumber);
                    updateSaving.executeUpdate();

                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs3 = selectStock.executeQuery();
                    ResultSetMetaData rsmd3 = rs3.getMetaData();
                    int c3 = rsmd3.getColumnCount();

                    while(rs3.next()){
                        for(int b=1; b<=c3; b++){
                            moneyStock = rs3.getDouble("money_stock");
                        }
                    }

                    moneyStock -= transferAmount;

                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, moneyStock);
                    updateStock.executeUpdate();

                }

                insert = conn2.prepareStatement("insert into money_transfers (account_number, money_amount, date, recipient_name, bank, branch, recipient_account_number) values (?,?,?,?,?,?,?)");
                insert.setInt(1,Integer.valueOf(accountNumber));
                insert.setDouble(2,transferAmount);
                insert.setDate(3,java.sql.Date.valueOf(LocalDate.now()));
                insert.setString(4,recipientName);
                insert.setString(5,recipientBank);
                insert.setString(6,recipientBranch);
                insert.setInt(7,recipientAccountNumber);
                insert.executeUpdate();

            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
        catch(Exception f){
            JOptionPane.showMessageDialog(null, f);
            System.out.println(f);
        }

        JOptionPane.showMessageDialog(null, "Your have successfully transfered money.");
    }//GEN-LAST:event_MoneyTransferTranferButtonActionPerformed

    private void MoneyTransferTranferAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferTranferAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoneyTransferTranferAmountActionPerformed

    private void MoneyTransferGetStatementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoneyTransferGetStatementButtonActionPerformed
        new MoneyTransferStatement().setVisible(true);
    }//GEN-LAST:event_MoneyTransferGetStatementButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static
            void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoneyTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoneyTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoneyTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoneyTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public
                    void run() {
                new MoneyTransfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExchangeMoneyCheckButton;
    private javax.swing.JTextField MoneyTransferAccountNumber;
    private javax.swing.JComboBox<String> MoneyTransferAccountType;
    private javax.swing.JButton MoneyTransferCancelButton;
    private javax.swing.JButton MoneyTransferCheckButton;
    private javax.swing.JTextField MoneyTransferCurrentAmount;
    private javax.swing.JButton MoneyTransferGetStatementButton;
    private javax.swing.JButton MoneyTransferHomeButton;
    private javax.swing.JPasswordField MoneyTransferPassword;
    private javax.swing.JTextField MoneyTransferRecipientAccountNumber;
    private javax.swing.JTextField MoneyTransferRecipientBank;
    private javax.swing.JTextField MoneyTransferRecipientBranch;
    private javax.swing.JTextField MoneyTransferRecipientName;
    private javax.swing.JTextField MoneyTransferTranferAmount;
    private javax.swing.JButton MoneyTransferTranferButton;
    private javax.swing.JTextField MoneyTransferUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
