/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banksystem;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class ExchangeMoney extends javax.swing.JFrame {

    Connection conn1, conn2;
    PreparedStatement select, selectSaving, selectFixed, selectRates, selectMoneyStock, updateSaving, updateFixed, updateMoneyStock, insertSaving, insertFixed;
    PreparedStatement selectStock, updateStock;
    
    double stock;

    String accountNumber = "";
    double saving_children,saving_normal,saving_adults,fixed_3_months,fixed_6_months,fixed_1_year,fixed_2_years,fixed_5_years;
    double interestRate;
    double initialDeposit;

    int[] durations = {3,6,12,24,60};
    LocalDate endDate;

    double accountMoney, newAccountMoney;
    String accountState;    

    double moneyStock, newMoneyStock;

    /**
     * Creates new form CreateNewAccount
     */
    public ExchangeMoney() {
        initComponents();
        ExchangeMoneyUsername.setText(User.getUsername());
        ExchangeMoneyPassword.setText(User.getPassword());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu12 = new javax.swing.JMenu();
        jMenu13 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu14 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu15 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu16 = new javax.swing.JMenu();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu17 = new javax.swing.JMenu();
        jMenu18 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenu19 = new javax.swing.JMenu();
        jMenu20 = new javax.swing.JMenu();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenu21 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ExchangeMoneyUsername = new javax.swing.JTextField();
        ExchangeMoneyCheckButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ExchangeMoneyTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        ExchangeMoneyAccountType = new javax.swing.JComboBox<>();
        ExchangeMoneyPassword = new javax.swing.JPasswordField();
        ExchangeMoneyBackButton = new javax.swing.JButton();
        ExchangeMoneyCancelButton = new javax.swing.JButton();
        ExchangeMoneyHomeButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ExchangeMoneyTable2 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ExchangeMoneyDepositAmount = new javax.swing.JTextField();
        ExchangeMoneyDepositButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ExchangeMoneyWithdrawAmount = new javax.swing.JTextField();
        ExchangeMoneyWithdrawButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem1.setText("Home");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem2.setText("Exit");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Accounts");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem6.setText("Create account");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem7.setText("Deposit money");
        jMenu2.add(jMenuItem7);

        jMenuItem8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem8.setText("Take money");
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Loans");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar1.add(jMenu3);

        jMenu5.setText("Transactions");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem4.setText("Transfer money");
        jMenu5.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem5.setText("Transfer Statement");
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        jMenu6.setText("Interests");
        jMenu6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar1.add(jMenu6);

        jMenu7.setText("Register");
        jMenu7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem3.setText("Register");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem3);

        jMenuBar1.add(jMenu7);

        jMenu8.setText("Profile");
        jMenu8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar1.add(jMenu8);

        jMenu4.setText("File");
        jMenu4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem9.setText("Home");
        jMenu4.add(jMenuItem9);

        jMenuItem10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem10.setText("Exit");
        jMenu4.add(jMenuItem10);

        jMenuBar2.add(jMenu4);

        jMenu9.setText("Accounts");
        jMenu9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem11.setText("Create account");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem11);

        jMenuItem12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem12.setText("Deposit money");
        jMenu9.add(jMenuItem12);

        jMenuItem13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem13.setText("Take money");
        jMenu9.add(jMenuItem13);

        jMenuBar2.add(jMenu9);

        jMenu10.setText("Loans");
        jMenu10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar2.add(jMenu10);

        jMenu11.setText("Transactions");
        jMenu11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem14.setText("Transfer money");
        jMenu11.add(jMenuItem14);

        jMenuItem15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem15.setText("Transfer Statement");
        jMenu11.add(jMenuItem15);

        jMenuBar2.add(jMenu11);

        jMenu12.setText("Interests");
        jMenu12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar2.add(jMenu12);

        jMenu13.setText("Register");
        jMenu13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem16.setText("Register");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu13.add(jMenuItem16);

        jMenuBar2.add(jMenu13);

        jMenu14.setText("Profile");
        jMenu14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar2.add(jMenu14);

        jMenu15.setText("File");
        jMenu15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem17.setText("Home");
        jMenu15.add(jMenuItem17);

        jMenuItem18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem18.setText("Exit");
        jMenu15.add(jMenuItem18);

        jMenuBar3.add(jMenu15);

        jMenu16.setText("Accounts");
        jMenu16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem19.setText("Create account");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu16.add(jMenuItem19);

        jMenuItem20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem20.setText("Deposit money");
        jMenu16.add(jMenuItem20);

        jMenuItem21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem21.setText("Take money");
        jMenu16.add(jMenuItem21);

        jMenuBar3.add(jMenu16);

        jMenu17.setText("Loans");
        jMenu17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar3.add(jMenu17);

        jMenu18.setText("Transactions");
        jMenu18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem22.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem22.setText("Transfer money");
        jMenu18.add(jMenuItem22);

        jMenuItem23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem23.setText("Transfer Statement");
        jMenu18.add(jMenuItem23);

        jMenuBar3.add(jMenu18);

        jMenu19.setText("Interests");
        jMenu19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar3.add(jMenu19);

        jMenu20.setText("Register");
        jMenu20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuItem24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem24.setText("Register");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu20.add(jMenuItem24);

        jMenuBar3.add(jMenu20);

        jMenu21.setText("Profile");
        jMenu21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuBar3.add(jMenu21);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 102, 255)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("username");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("password");

        ExchangeMoneyUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyUsernameActionPerformed(evt);
            }
        });

        ExchangeMoneyCheckButton.setBackground(new java.awt.Color(153, 255, 102));
        ExchangeMoneyCheckButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyCheckButton.setText("Check ");
        ExchangeMoneyCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyCheckButtonActionPerformed(evt);
            }
        });

        ExchangeMoneyTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "NIC Number", "Birthday", "Telephone No.", "Occupation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ExchangeMoneyTable);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Account Type");

        ExchangeMoneyAccountType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Saving Account", "Fixed Account" }));
        ExchangeMoneyAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyAccountTypeActionPerformed(evt);
            }
        });

        ExchangeMoneyBackButton.setBackground(new java.awt.Color(0, 204, 0));
        ExchangeMoneyBackButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyBackButton.setForeground(new java.awt.Color(255, 255, 255));
        ExchangeMoneyBackButton.setText("Back");
        ExchangeMoneyBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyBackButtonActionPerformed(evt);
            }
        });

        ExchangeMoneyCancelButton.setBackground(new java.awt.Color(255, 0, 0));
        ExchangeMoneyCancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        ExchangeMoneyCancelButton.setText("Cancel");
        ExchangeMoneyCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyCancelButtonActionPerformed(evt);
            }
        });

        ExchangeMoneyHomeButton.setBackground(new java.awt.Color(255, 255, 51));
        ExchangeMoneyHomeButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyHomeButton.setText("Home");
        ExchangeMoneyHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyHomeButtonActionPerformed(evt);
            }
        });

        ExchangeMoneyTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account Number", "Money Amount", "Start Date", "End Date", "Last Exchange", "Annual Interest Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ExchangeMoneyTable2);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Money Amount");

        ExchangeMoneyDepositAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ExchangeMoneyDepositButton.setBackground(new java.awt.Color(0, 0, 0));
        ExchangeMoneyDepositButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyDepositButton.setForeground(new java.awt.Color(255, 255, 255));
        ExchangeMoneyDepositButton.setText("Deposit");
        ExchangeMoneyDepositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyDepositButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addComponent(ExchangeMoneyDepositAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(ExchangeMoneyDepositButton)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExchangeMoneyDepositAmount))
                .addGap(44, 44, 44)
                .addComponent(ExchangeMoneyDepositButton)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Deposit", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 153, 153));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Money Amount");

        ExchangeMoneyWithdrawAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ExchangeMoneyWithdrawButton.setBackground(new java.awt.Color(0, 0, 0));
        ExchangeMoneyWithdrawButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ExchangeMoneyWithdrawButton.setForeground(new java.awt.Color(255, 255, 255));
        ExchangeMoneyWithdrawButton.setText("Withdraw");
        ExchangeMoneyWithdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExchangeMoneyWithdrawButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(ExchangeMoneyWithdrawAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(ExchangeMoneyWithdrawButton)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExchangeMoneyWithdrawAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(ExchangeMoneyWithdrawButton)
                .addGap(57, 57, 57))
        );

        jTabbedPane1.addTab("Withdraw", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)))
                                .addGap(212, 212, 212)))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(575, 575, 575)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ExchangeMoneyUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                        .addComponent(ExchangeMoneyPassword))
                                    .addComponent(ExchangeMoneyAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ExchangeMoneyCheckButton))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ExchangeMoneyHomeButton)
                .addContainerGap(772, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(ExchangeMoneyBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExchangeMoneyCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ExchangeMoneyHomeButton)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(ExchangeMoneyUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(ExchangeMoneyPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ExchangeMoneyAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(34, 34, 34)
                                .addComponent(ExchangeMoneyCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(311, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ExchangeMoneyBackButton)
                            .addComponent(ExchangeMoneyCancelButton))
                        .addGap(260, 260, 260))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void ExchangeMoneyCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyCheckButtonActionPerformed
        
        try{

            String username = ExchangeMoneyUsername.getText().trim();
            String password = String.valueOf(ExchangeMoneyPassword.getPassword()).trim();

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3307/bank_system","root","");

            select = conn1.prepareStatement("select * from clients");
            ResultSet rs = select.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            int c = rsmd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) ExchangeMoneyTable.getModel();
            df.setRowCount(0);

            Vector v = new Vector();

            while(rs.next()){
                for(int a=1; a<=c; a++){
                    if(rs.getString("username").equals(username) && rs.getString("password").equals(password)){

                        accountNumber = rs.getInt("accountnumber")+"";
                        System.out.println("Account Number : "+accountNumber);

                        v.add(rs.getString("name"));
                        v.add(rs.getString("address"));
                        v.add(rs.getString("NIC"));
                        v.add(rs.getDate("birthday"));
                        v.add(rs.getString("telephone"));
                        v.add(rs.getString("occupation"));
                    }
                }
            }
            df.addRow(v);

            if(ExchangeMoneyAccountType.getSelectedIndex()==0){
                selectSaving = conn1.prepareStatement("select * from saving_accounts");
                ResultSet rs2 = selectSaving.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add("");
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   
            }      
            if(ExchangeMoneyAccountType.getSelectedIndex()==1){
                selectFixed = conn1.prepareStatement("select * from fixed_deposits");
                ResultSet rs2 = selectFixed.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            Date endDate = rs2.getDate("end_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add(endDate);
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   
            }      
 
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
        catch(Exception f){
            JOptionPane.showMessageDialog(null, f);
            System.out.println(f);
        }
    }//GEN-LAST:event_ExchangeMoneyCheckButtonActionPerformed

    private void ExchangeMoneyHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyHomeButtonActionPerformed
        new ClientSector().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ExchangeMoneyHomeButtonActionPerformed

    private void ExchangeMoneyBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyBackButtonActionPerformed
        new ClientSector().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_ExchangeMoneyBackButtonActionPerformed

    private void ExchangeMoneyAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyAccountTypeActionPerformed
        
    }//GEN-LAST:event_ExchangeMoneyAccountTypeActionPerformed

    private void ExchangeMoneyUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExchangeMoneyUsernameActionPerformed

    private void ExchangeMoneyCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyCancelButtonActionPerformed
        ExchangeMoneyUsername.setText("");
        ExchangeMoneyPassword.setText("");
        ExchangeMoneyAccountType.setSelectedIndex(0);
        ExchangeMoneyWithdrawAmount.setText("");
        ExchangeMoneyDepositAmount.setText("");
         
        DefaultTableModel df4 = (DefaultTableModel) ExchangeMoneyTable.getModel();
        df4.setRowCount(0);
        DefaultTableModel df5 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
        df5.setRowCount(0);
    }//GEN-LAST:event_ExchangeMoneyCancelButtonActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        new ExchangeMoney().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new RegistrationForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        new ExchangeMoney().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        new RegistrationForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        new ExchangeMoney().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        new RegistrationForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void ExchangeMoneyDepositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyDepositButtonActionPerformed
        try{
            String username = ExchangeMoneyUsername.getText().trim();
            String password = String.valueOf(ExchangeMoneyPassword.getPassword()).trim();
            String depositAmountText = ExchangeMoneyDepositAmount.getText().trim();
            double depositAmount;
            if(!depositAmountText.isEmpty()){
                depositAmount = Double.parseDouble(depositAmountText);
            }
            else depositAmount = 0;

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3307/bank_system","root","");

            if(ExchangeMoneyAccountType.getSelectedIndex()==0){  
                if(accountState.equals("pending") || depositAmountText.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please meet a manager to get your account approved if you haven't yet or you have left money amount being deposited empty.");
                }
                else if(accountState.equals("approved") && !depositAmountText.isEmpty()){
                    updateSaving = conn2.prepareStatement("update saving_accounts set money_amount=?,last_exchange=? where account_number=?");
                    newAccountMoney = accountMoney + depositAmount;
                    updateSaving.setDouble(1, newAccountMoney);
                    updateSaving.setDouble(2, depositAmount);
                    updateSaving.setString(3, accountNumber);
                    updateSaving.executeUpdate();
 
                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs = selectStock.executeQuery();
                    ResultSetMetaData rsmd = rs.getMetaData();
                    int c = rsmd.getColumnCount();
                    while(rs.next()){
                        for(int a=1; a<=c; a++){
                            stock = rs.getDouble("money_stock");
                        }
                    }
                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, stock+depositAmount);
                    updateStock.executeUpdate();
                }

                selectSaving = conn2.prepareStatement("select * from saving_accounts");
                ResultSet rs2 = selectSaving.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add("");
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   

            }
            
            if(ExchangeMoneyAccountType.getSelectedIndex()==1){  
                if(accountState.equals("pending") || depositAmountText.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please meet a manager to get your account approved if you haven't yet or you have left money amount being deposited empty.");
                }
                else if(accountState.equals("approved") && !depositAmountText.isEmpty()){  
                    updateFixed = conn2.prepareStatement("update fixed_deposits set money_amount=?,last_exchange=? where account_number=?");
                    newAccountMoney = accountMoney + depositAmount;
                    updateFixed.setDouble(1, newAccountMoney);
                    updateFixed.setDouble(2, depositAmount);
                    updateFixed.setString(3, accountNumber);
                    updateFixed.executeUpdate();

                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs = selectStock.executeQuery();
                    ResultSetMetaData rsmd = rs.getMetaData();
                    int c = rsmd.getColumnCount();
                    while(rs.next()){
                        for(int a=1; a<=c; a++){
                            stock = rs.getDouble("money_stock");
                        }
                    }
                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, stock+depositAmount);
                    updateStock.executeUpdate();
                }

                selectFixed = conn2.prepareStatement("select * from fixed_deposits");
                ResultSet rs2 = selectFixed.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            Date endDate = rs2.getDate("end_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add(endDate);
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   

            }

        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
        catch(Exception f){
            JOptionPane.showMessageDialog(null, f);
            System.out.println(f);
        }
    }//GEN-LAST:event_ExchangeMoneyDepositButtonActionPerformed

    private void ExchangeMoneyWithdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExchangeMoneyWithdrawButtonActionPerformed
        
        try{
            String username = ExchangeMoneyUsername.getText().trim();
            String password = String.valueOf(ExchangeMoneyPassword.getPassword()).trim();
            String withdrawAmountText = ExchangeMoneyWithdrawAmount.getText().trim();
            double withdrawAmount;
            if(!withdrawAmountText.isEmpty()){
                withdrawAmount = Double.parseDouble(withdrawAmountText);
            }
            else withdrawAmount = 0;

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3307/bank_system","root","");

            if(ExchangeMoneyAccountType.getSelectedIndex()==0){  
                if(accountState.equals("pending") || withdrawAmountText.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please meet a manager to get your account approved if you haven't yet or you have left money amount being deposited empty.");
                }
                else if(accountState.equals("approved") && !withdrawAmountText.isEmpty()){
                    updateSaving = conn2.prepareStatement("update saving_accounts set money_amount=?,last_exchange=? where account_number=?");
                    newAccountMoney = accountMoney - withdrawAmount;
                    updateSaving.setDouble(1, newAccountMoney);
                    updateSaving.setDouble(2, withdrawAmount*(-1));
                    updateSaving.setString(3, accountNumber);
                    updateSaving.executeUpdate();
 
                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs = selectStock.executeQuery();
                    ResultSetMetaData rsmd = rs.getMetaData();
                    int c = rsmd.getColumnCount();
                    while(rs.next()){
                        for(int a=1; a<=c; a++){
                            stock = rs.getDouble("money_stock");
                        }
                    }
                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, stock-withdrawAmount);
                    updateStock.executeUpdate();
                }

                selectSaving = conn2.prepareStatement("select * from saving_accounts");
                ResultSet rs2 = selectSaving.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add("");
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   

            }
            
            if(ExchangeMoneyAccountType.getSelectedIndex()==1){  
                if(accountState.equals("pending") || withdrawAmountText.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please meet a manager to get your account approved if you haven't yet or you have left money amount being deposited empty.");
                }
                else if(accountState.equals("approved") && !withdrawAmountText.isEmpty()){  
                    updateFixed = conn2.prepareStatement("update fixed_deposits set money_amount=?,last_exchange=? where account_number=?");
                    newAccountMoney = accountMoney - withdrawAmount;
                    updateFixed.setDouble(1, newAccountMoney);
                    updateFixed.setDouble(2, withdrawAmount*(-1));
                    updateFixed.setString(3, accountNumber);
                    updateFixed.executeUpdate();

                    selectStock = conn2.prepareStatement("select * from bank_money_stock");
                    ResultSet rs = selectStock.executeQuery();
                    ResultSetMetaData rsmd = rs.getMetaData();
                    int c = rsmd.getColumnCount();
                    while(rs.next()){
                        for(int a=1; a<=c; a++){
                            stock = rs.getDouble("money_stock");
                        }
                    }
                    updateStock = conn2.prepareStatement("update bank_money_stock set money_stock=?");
                    updateStock.setDouble(1, stock-withdrawAmount);
                    updateStock.executeUpdate();
                }

                selectFixed = conn2.prepareStatement("select * from fixed_deposits");
                ResultSet rs2 = selectFixed.executeQuery();
                ResultSetMetaData rsmd2 = rs2.getMetaData();
                int c2 = rsmd2.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) ExchangeMoneyTable2.getModel();
                df2.setRowCount(0);

                Vector v2 = new Vector();

                while(rs2.next()){
                    for(int a=1; a<=c2; a++){
                        if(rs2.getString("account_number").equals(accountNumber)){

                            accountNumber = rs2.getInt("account_number")+"";
                            accountMoney = rs2.getDouble("money_amount");
                            accountState = rs2.getString("state");
                            Date startDate = rs2.getDate("start_date");
                            Date endDate = rs2.getDate("end_date");
                            double lastExchange = rs2.getDouble("last_exchange");
                            double annualInrterestRate = rs2.getDouble("annual_interest_rate");

                            v2.add(accountNumber);
                            v2.add(accountMoney);
                            v2.add(startDate);
                            v2.add(endDate);
                            v2.add(lastExchange);
                            v2.add(annualInrterestRate);
                        }
                    }
                }
                df2.addRow(v2);   

            }

        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
        catch(Exception f){
            JOptionPane.showMessageDialog(null, f);
            System.out.println(f);
        }

    }//GEN-LAST:event_ExchangeMoneyWithdrawButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static
            void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExchangeMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExchangeMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExchangeMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExchangeMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public
                    void run() {
                new ExchangeMoney().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ExchangeMoneyAccountType;
    private javax.swing.JButton ExchangeMoneyBackButton;
    private javax.swing.JButton ExchangeMoneyCancelButton;
    private javax.swing.JButton ExchangeMoneyCheckButton;
    private javax.swing.JTextField ExchangeMoneyDepositAmount;
    private javax.swing.JButton ExchangeMoneyDepositButton;
    private javax.swing.JButton ExchangeMoneyHomeButton;
    private javax.swing.JPasswordField ExchangeMoneyPassword;
    private javax.swing.JTable ExchangeMoneyTable;
    private javax.swing.JTable ExchangeMoneyTable2;
    private javax.swing.JTextField ExchangeMoneyUsername;
    private javax.swing.JTextField ExchangeMoneyWithdrawAmount;
    private javax.swing.JButton ExchangeMoneyWithdrawButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu16;
    private javax.swing.JMenu jMenu17;
    private javax.swing.JMenu jMenu18;
    private javax.swing.JMenu jMenu19;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu20;
    private javax.swing.JMenu jMenu21;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
